.components-container {
  position: absolute;
  height: 100%;
  width: 100%;
  overflow: hidden;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

.components-connections {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}

.components-connections {
  background: rgba(0, 0, 0, .05);
}

.connection-line {
  transition: all 0.3s ease 0s;
}

.components-container {

  .audio-component {
    position: absolute;
    box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
    background: #ffffff;
  }

  &.connecting {

    .connection-line,
    .io {
      opacity: $non-connectable-opacity;
    }

    .io.connecting,
    .io.connectable {
      opacity: 1;

      &.hover,
      &:hover {
        // Unfortunately when connecting the :hover pseudo class is not applied
        // since technically the user is dragging the mouse.
        // I solved this via javascript in the io components.
        @include connectingIo();
      }
    }
  }
}

.audio-component {
  background: rgba(0, 0, 0, 0.04);
  border: 1px solid rgba(0, 0, 0, 0.2);
  padding: 10px;
  border-radius: 3px;
  position: relative;
  cursor: move;

  // Don't allow text selection for components.
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select:none;
  -o-user-select: none;
  user-select: none;

  &.selected {
    //border: 3px solid rgba(0, 0, 0, 0.2);
    box-shadow: 1px 1px 8px rgba(51, 139, 200, 0.9);
    border-color: rgba(51, 139, 200, 1);
  }
}

.audio-component-headline {
  font-size: 18px;
  margin-top: 0;
  margin-bottom: 5px;
}

.audio-component-options {
  list-style-type: none;
  list-style-image: none;
  margin: 0;
  padding: 0;

  .option-label {
    width: 30%;
    float: left;
  }

  li {
    padding: 1px;
  }
}

$component-io-offset: ($io-size / -2);

.component-io {
  position: absolute;
  left: $component-io-offset;
  right: $component-io-offset;
  list-style-type: none;
  list-style-image: none;
  display: flex;
  justify-content: space-between;
  padding: 0;
  margin: 0;

  .io {
    box-sizing: border-box;
    border-radius: 50px;
    background: rgba(0, 0, 0, 0.01);
    border: $io-border-width solid rgba(0, 0, 0, 0.4);
    transition: all 0.3s ease 0s;
    width: $io-size;
    height: $io-size;
    cursor: pointer;

    &.connecting {
      @include connectingIo();
    }

    &:hover {
      //background: #1acf18;
    }

    &.connected {
      background: #bbb;
    }
  }

  .components-available & {
    display: none;
  }
}

.component-inputs {
  top: $component-io-offset;
}

.component-outputs {
  bottom: $component-io-offset;
}


$key-width: 25px;
$key-height: 85px;
$black-key-width-factor: .68;
$black-key-height-factor: .58;
$octave-width: 7 * $key-width;

.keyboard-content {
  border: 1px solid rgba(0, 0, 0, 0.2);
  overflow: hidden;

  &.octaves-2 {
    width: 2 * $octave-width;
  }

  &.octaves-3 {
    width: 3 * $octave-width;
  }

  &.octaves-4 {
    width: 4 * $octave-width;
  }
}

.keyboard-keys {

  list-style-type: none;
  list-style-image: none;
  overflow: visble;
  margin: 0 ($key-width * $black-key-width-factor * -1) 0 0;
  margin: 0;
  padding: 0;
  float: left;

  .key {
    float: left;
    background: #ffffff;
    height: $key-height;
    width: $key-width;
    color: transparent;
    border-right: 1px solid rgba(0, 0, 0, 0.2);
    box-sizing: border-box;
    cursor: pointer;

    &:first-child {
      //border-left: 0;
    }

    &.key-black {
      background: #555;
      height: $key-height * $black-key-height-factor;
      width: $key-width * $black-key-width-factor;
      position: relative;
      margin-left: $key-width * $black-key-width-factor * -.5;
      margin-right: $key-width * $black-key-width-factor * -.5;
    }
  }

  &.additionalC {
    margin-right: 0;
  }

  &:last-child {

    > :last-child {
      border-right: none;
    }
  }
}
